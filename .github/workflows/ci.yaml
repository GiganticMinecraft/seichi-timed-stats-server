name: CI
on:
  push:
    paths-ignore:
      - '**.md'

env:
  IMAGE: ghcr.io/giganticminecraft/seichi-timed-stats-server

jobs:
  lint-and-test:
    name: Lint and test application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      # > selecting a toolchain either by action or manual `rustup` calls should happen
      # > before the plugin, as it uses the current rustc version as its cache key
      # https://github.com/Swatinem/rust-cache/tree/cb2cf0cc7c5198d3364b9630e2c3d457f160790c#example-usage
      - uses: Swatinem/rust-cache@v1

      # buf CLIがビルドに必要
      - uses: bufbuild/buf-setup-action@v1

      # GitHubのUIにエラー/警告を表示してくれるので actions-rs/cargo を利用している

      - name: Cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy

      - name: Cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  build-image:
    name: Build docker image (and publish on master)
    needs: [lint-and-test]
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=sha,prefix=sha-,suffix=,format=short
            type=schedule,pattern={{date 'YYYYMMDD'}}

      - name: Build (and push if on master)
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          # すべてのビルドステージのすべてのレイヤーをキャッシュして欲しいのでmode=max
          cache-to: type=gha,mode=max
